C语言发展史：
C语言学习建议：
        1.概念的正确性
        2.动手能力
        3.阅读优秀的程序段
        4.大量练习面试题
讲解思路：
        1.基本概念
        2.数据类型，运算符，表达式
        3.输入输出专题
        4.流程控制
        5.数组
        6.指针
        7.函数
        8.构造类型
        9.动态内存管理
        10.调试工具「gdb,make」调试技巧
        11.常用库函数「header file」
          
hello.c:
.c->.out
编译器gcc
c源文件-预处理-编译-汇编-链接-可执行文件
.c - -E(.i) - -S(.s)(汇编语言) - -c(.o)(binary) - gcc .o -> executable
编辑器：code

一。 基本概念
1.以helloworld为例对写程序的思路提出如下要求:
   1> 头文件包含的重要性
   2> 以函数为单位进行程序编写
   3> 声明部分，实现部分
   4> return 0;给父进程看的
   5> 多用空格空行
   6> 添加注释
   7> #if 0
      func()
      {

      }
      #endif  则这一段不参与编译
2. 算法：解决问题的方法（流程图/ns图/有限状态机 FSM）
3. 程序：用某种语言实现算法
4. 进程：
5. 防止写越界，防止内存泄露，谁打开谁关闭，谁申请谁释放 

二。数据类型，运算符和表达式
1.数据类型：（基本）
1)所占字节数
2）存储区别
3）不同类型之间转换  （隐式/显式）
   float f = 3.9;
   int i = f; 精度丢失
   隐式： ch + i --> i
         f - d --> d
         (ch + i) - (f - d) --> int - d --> d
   显式： 强制类型转换
4）特殊性 ：
          1.bool
          2.float 存在精度问题，不能直接用于比较
          int func(float f) 
          {
                if(f<0)
                     return -1;
                else if(f==0)   //if(fabs(f-0) <= 1e-6)
                     return 0;
                else
                     return 1;
          }
          3.char型有无符号未定义
          4.不同形式的0值： 0 '0' "0" '\0'
          5. 数据类型与后续代码中的输入输出要相匹配  
unsigned int 254 -> 32bit
-254 -> 254 -> 1111 1110取反 + 1
(254)10 = (1111 1110)2 = (376)8 = (FE)16
254
B11111110
0376
0xFE   

2. 常量与变量
常量：在程序执行过程中 值不会发生变化的量
分类：
      整型常量：1， 790， 76， 52
      实型常量：3.14    5.26    1.9999
      字符常量：由单引号引起来的单个的字符或转义字符， ‘a’，‘X’, '\n','\t'，'\015'(三位八进制)，'\x7f'(二位十六进制),'\018'(错，八进制不会出现8，如果是字符串则应该用双引号连起来)
      字符串常量：由双引号引起来的一个或多个字符组成的序列：如""（空字符占一个byte：尾0），"a", "abXYz",""abc\n\021\018"
      ***注意区别'a'与"a"
      标识常量：#define 宏名 宏体 （处理在程序的预处理阶段，占编译时间，可以实现一改全改，
               缺点：不检查语法，只是单纯的宏体与宏名之间的替换）
变量：用来保存一些特定内容，并且在程序执行过程中值随时会发生变化的量
定义：【存储类型】数据类型 标识符 = 值 
               TYPE NAME = VALUE;
      标识符： 由字母，数字，下划线组成并且不能以数字开头的一个标识序列。
      写标识符要求尽量做到见名生义。
      数据类型：基本数据类型 / 任意构造类型
      值：注意匹配类型
      存储类型：auto static register extern(说明型)
              auto:默认，初始化为随机值，自动分配、释放空间。
              register:寄存器类型 （建议型，只能定义局部变量，不能全局变量；
              大小有限制，只能定义32位大小的数据类型，如double就不行；
              寄存器没有地址，所以一个寄存器类型的变量无法打印出地址查看或使用）
              static：静态型，自动初始化为0值或空值，并且其变量的值有继承性。
                      常用于修饰变量、函数（使函数只能在当前文件范围内使用）。
                  (static变量一定一直只用同一块空间)
              extern:说明型，意味着不能改变被说明的变量的值或类型 

变量的生命周期和作用范围
      1）全局变量（从声明时开始到程序结束）/局部变量
      2）局部变量和局部变量之间的区别和关系 
      3）参考图片

表达式与语句的区别

运算符部分：
      1）每个运算符所需要的参与运算的操作数个数
      2）结合性
      3）优先级
      4）运算符的特殊用法
         如：%，=与==， 逻辑运算符&&,||的短路特性
      5）位运算的重要意义
         将操作数中第n位置1，其他位不变：num = num | 1 << n;
         将操作数中第n位置0，其他位不变：num = num & ~(1 << n);
         测试第n位：if(num & 1 << n)
         从一个指定宽度的数中取出其中的某几位：

三、输入、输出专题
input & output -> I/O(标准IO,文件IO)
1、格式化输入输出函数：scanf, printf
      int printf(const char *format, ...); format:"%[修饰符]格式字符"

      int scanf(const char *format,...);
      format: 抑制符*
      %s 的使用是比较危险的，因为不知道存储空间的大小 
      scanf放在循环结构中要注意能否接收到正常有效的内容。
2、字符输入输出函数：getchar, putchar (一般不用char来传参，而用整型代替)
3、字符串输入输出函数：gets,puts
      gets():十分危险的函数，可以用fgets,getline来代替。
      char *fgets(char *s, int size, FILE *stream);
练习题：
1.一个水分子的质量大约为3.0e-23g,一夸脱水大约有950g，要求从终端输入n夸脱水，
然后显示这么多夸脱水包含有多少水分子。
2.
3.
